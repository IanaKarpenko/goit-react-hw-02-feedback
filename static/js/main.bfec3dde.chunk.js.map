{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.module.scss","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/FeeedbackWidget/FeeedbackWidget.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","defaultProps","Statistics","good","neutral","bad","total","positiveFeedbacksPercentage","className","styles","list","item","FeedbackOptions","options","onLeaveFeedback","buttonsBar","map","option","type","name","onClick","buttonStyle","Section","title","children","sectionMainStyle","sectionTitle","FeeedbackWidget","state","handleClick","evt","target","setState","countTotalFeedback","Object","values","reduce","acc","cur","countPositiveFeedbackPercentage","Math","round","console","log","this","keys","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfec3dde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1qzoN\",\"item\":\"Statistics_item__3ZZtJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBar\":\"FeedbackOptions_buttonsBar__1uOco\",\"buttonStyle\":\"FeedbackOptions_buttonStyle__P8FrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__1ph6o\",\"sectionMainStyle\":\"Section_sectionMainStyle__Jai3h\"};","import PropTypes from 'prop-types';\r\n\r\nexport const Notification = ({ message }) => {\r\n    return (\r\n        <p> { message } </p>\r\n    )\r\n}\r\n\r\nNotification.defaultProps = {\r\n    message: \"No feedback given\",\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}","import PropTypes from 'prop-types';\r\nimport { Notification } from '../Notification/Notification';\r\nimport styles  from './Statistics.module.scss';\r\n\r\nexport const Statistics = ({ good, neutral, bad, total, positiveFeedbacksPercentage }) =>\r\n\r\n    total ? (\r\n        <>\r\n            <ul className={styles.list}>\r\n                <li className={styles.item}> Good:\r\n                    <span> { good } </span>\r\n                </li>\r\n                <li className={styles.item}> Neutral:\r\n                    <span> { neutral } </span>\r\n                </li>\r\n                <li className={styles.item}> Bad:\r\n                    <span> { bad } </span>\r\n                </li>\r\n            </ul>\r\n            <p>Total: <span> { total } </span></p>\r\n            <p>Positive feedback: <span> { positiveFeedbacksPercentage + '%' } </span></p>\r\n        </>\r\n    ) \r\n    : (<Notification message={\"No feedback given\"} />);\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positiveFeedbacksPercentage: PropTypes.number.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.scss';\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            <div className={styles.buttonsBar}>\r\n                {\r\n                    options.map(option => (\r\n                        <button\r\n                            key={option}\r\n                            type=\"button\"\r\n                            name={option}\r\n                            onClick={onLeaveFeedback}\r\n                            className={styles.buttonStyle}> {option}\r\n                        </button>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.scss';\r\n\r\nexport const Section = ({ title, children }) => {\r\n    return (\r\n        <div className={styles.sectionMainStyle }>\r\n            <h2 className={ styles.sectionTitle }> {title} </h2>\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children:PropTypes.node.isRequired\r\n}","import { Component } from \"react\";\r\nimport { Statistics } from \"../Statistics\";\r\nimport { FeedbackOptions } from \"../FeedbackOptions\";\r\nimport { Section } from \"../Section/Section\";\r\n\r\nexport class FeeedbackWidget extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    handleClick = (evt) => {\r\n\r\n        const { name } = evt.target;\r\n        this.setState((state) => {\r\n            return { [name]: state[name] + 1 }\r\n        });\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        return Object.values(this.state).reduce((acc, cur) => acc + cur);\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n        return good ? Math.round(good * 100 / this.countTotalFeedback()) : 0;\r\n    }\r\n\r\n    render() {\r\n        console.log(this.countTotalFeedback());\r\n        console.log(this.countPositiveFeedbackPercentage());\r\n        const { good, neutral, bad } = this.state;\r\n        return (\r\n        <>\r\n            <Section title={\"Please leave feedback\"}>\r\n                <FeedbackOptions\r\n                    options={Object.keys(this.state)}\r\n                    onLeaveFeedback={this.handleClick} />\r\n                </Section>\r\n                \r\n                \r\n            <Section title={\"Statistics\"}>\r\n                <Statistics\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={this.countTotalFeedback()}\r\n                    positiveFeedbacksPercentage={this.countPositiveFeedbackPercentage()} />\r\n                </Section>\r\n                \r\n        </>\r\n        )\r\n    }\r\n}","//import logo from './logo.svg';\nimport './App.css';\nimport { FeeedbackWidget } from './components/FeeedbackWidget';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <FeeedbackWidget />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}